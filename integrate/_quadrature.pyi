"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Dict, TYPE_CHECKING, Tuple
from numpy import trapz as trapezoid
from typing_extensions import Protocol

__all__ = ['fixed_quad', 'quadrature', 'romberg', 'romb', 'trapezoid', 'trapz', 'simps', 'simpson', 'cumulative_trapezoid', 'cumtrapz', 'newton_cotes', 'AccuracyWarning']
trapezoid = ...
if trapezoid.__doc__:
    ...
def trapz(y, x=..., dx=..., axis=...): # -> Any:
    """`An alias of `trapezoid`.

    `"""
    ...

class AccuracyWarning(Warning):
    ...


if TYPE_CHECKING:
    class CacheAttributes(Protocol):
        cache: Dict[int, Tuple[Any, Any]]
        ...
    
    
else:
    ...
def cache_decorator(func: Callable) -> CacheAttributes:
    ...

def fixed_quad(func, a, b, args=..., n=...): # -> tuple[Unknown, None]:
    """
    Compute a definite integral"""
    ...

def vectorize1(func, args=..., vec_func=...): # -> (x: Unknown) -> Unknown:
    """Vectorize the call to a function"""
    ...

def quadrature(func, a, b, args=..., tol=..., rtol=..., maxiter=..., vec_func=..., miniter=...): # -> tuple[Unknown | float, Unknown | float]:
    """
    Compute a definite integral"""
    ...

def tupleset(t, i, value): # -> tuple[Unknown, ...]:
    ...

def cumtrapz(y, x=..., dx=..., axis=..., initial=...): # -> ndarray[Unknown, Unknown]:
    """`An alias of `cumulative_trapezo"""
    ...

def cumulative_trapezoid(y, x=..., dx=..., axis=..., initial=...): # -> ndarray[Unknown, Unknown]:
    """
    Cumulatively integrate y(x)"""
    ...

def simps(y, x=..., dx=..., axis=..., even=...):
    """`An alias of `simpson`.

    `si"""
    ...

def simpson(y, x=..., dx=..., axis=..., even=...):
    """
    Integrate y(x) using sample"""
    ...

def romb(y, dx=..., axis=..., show=...):
    """
    Romberg integration using s"""
    ...

def romberg(function, a, b, args=..., tol=..., rtol=..., show=..., divmax=..., vec_func=...):
    """
    Romberg integration of a ca"""
    ...

_builtincoeffs = ...
def newton_cotes(rn, equal=...):
    r"""
    Return weights and error co"""
    ...

