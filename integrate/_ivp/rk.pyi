"""
This type stub file was generated by pyright.
"""

import numpy as np
from .base import DenseOutput, OdeSolver
from . import dop853_coefficients

SAFETY = ...
MIN_FACTOR = ...
MAX_FACTOR = ...
def rk_step(fun, t, y, f, h, A, B, C, K): # -> tuple[Unknown, Unknown]:
    """Perform a single Runge-Kutta ste"""
    ...

class RungeKutta(OdeSolver):
    """Base class for explicit Runge-Ku"""
    C: np.ndarray = ...
    A: np.ndarray = ...
    B: np.ndarray = ...
    E: np.ndarray = ...
    P: np.ndarray = ...
    order: int = ...
    error_estimator_order: int = ...
    n_stages: int = ...
    def __init__(self, fun, t0, y0, t_bound, max_step=..., rtol=..., atol=..., vectorized=..., first_step=..., **extraneous) -> None:
        ...
    


class RK23(RungeKutta):
    """Explicit Runge-Kutta method of o"""
    order = ...
    error_estimator_order = ...
    n_stages = ...
    C = ...
    A = ...
    B = ...
    E = ...
    P = ...


class RK45(RungeKutta):
    """Explicit Runge-Kutta method of o"""
    order = ...
    error_estimator_order = ...
    n_stages = ...
    C = ...
    A = ...
    B = ...
    E = ...
    P = ...


class DOP853(RungeKutta):
    """Explicit Runge-Kutta method of o"""
    n_stages = ...
    order = ...
    error_estimator_order = ...
    A = ...
    B = ...
    C = ...
    E3 = ...
    E5 = ...
    D = ...
    A_EXTRA = dop853_coefficients.A[n_stages + 1]
    C_EXTRA = dop853_coefficients.C[n_stages + 1]
    def __init__(self, fun, t0, y0, t_bound, max_step=..., rtol=..., atol=..., vectorized=..., first_step=..., **extraneous) -> None:
        ...
    


class RkDenseOutput(DenseOutput):
    def __init__(self, t_old, t, y_old, Q) -> None:
        ...
    


class Dop853DenseOutput(DenseOutput):
    def __init__(self, t_old, t, y_old, F) -> None:
        ...
    


