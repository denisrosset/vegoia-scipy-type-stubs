"""
This type stub file was generated by pyright.
"""

import numpy as np
from .base import DenseOutput, OdeSolver

S6 = ...
C = ...
E = np.array([-13 - 7 * S6, -13 + 7 * S6, -1]) / 3
MU_REAL = ...
MU_COMPLEX = ...
T = ...
TI = ...
TI_REAL = TI[0]
TI_COMPLEX = TI[1] + 1j * TI[2]
P = ...
NEWTON_MAXITER = ...
MIN_FACTOR = ...
MAX_FACTOR = ...
def solve_collocation_system(fun, t, y, h, Z0, scale, tol, LU_real, LU_complex, solve_lu):
    """Solve the collocation system.

 """
    ...

def predict_factor(h_abs, h_abs_old, error_norm, error_norm_old):
    """Predict by which factor to incre"""
    ...

class Radau(OdeSolver):
    """Implicit Runge-Kutta method of R"""
    def __init__(self, fun, t0, y0, t_bound, max_step=..., rtol=..., atol=..., jac=..., jac_sparsity=..., vectorized=..., first_step=..., **extraneous) -> None:
        ...
    


class RadauDenseOutput(DenseOutput):
    def __init__(self, t_old, t, y_old, Q) -> None:
        ...
    


