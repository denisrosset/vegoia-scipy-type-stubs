"""
This type stub file was generated by pyright.
"""

from . import PPoly

"""Interpolation algorithms using p"""
__all__ = ["CubicHermiteSpline", "PchipInterpolator", "pchip_interpolate", "Akima1DInterpolator", "CubicSpline"]
def prepare_input(x, y, axis, dydx=...): # -> tuple[NDArray[Any], Unknown, ndarray[Unknown, Unknown], Unknown, ndarray[Unknown, Unknown] | Unknown | None]:
    """Prepare input for cubic spline i"""
    ...

class CubicHermiteSpline(PPoly):
    """Piecewise-cubic interpolator mat"""
    def __init__(self, x, y, dydx, axis=..., extrapolate=...) -> None:
        ...
    


class PchipInterpolator(CubicHermiteSpline):
    r"""PCHIP 1-D monotonic cubic interp"""
    def __init__(self, x, y, axis=..., extrapolate=...) -> None:
        ...
    


def pchip_interpolate(xi, yi, x, der=..., axis=...): # -> ndarray[Any, Unknown] | list[Unknown | ndarray[Any, Unknown]]:
    """
    Convenience function for pc"""
    ...

class Akima1DInterpolator(CubicHermiteSpline):
    """
    Akima interpolator

    Fit"""
    def __init__(self, x, y, axis=...) -> None:
        ...
    
    def extend(self, c, x, right=...):
        ...
    
    @classmethod
    def from_spline(cls, tck, extrapolate=...):
        ...
    
    @classmethod
    def from_bernstein_basis(cls, bp, extrapolate=...):
        ...
    


class CubicSpline(CubicHermiteSpline):
    """Cubic spline data interpolator.
"""
    def __init__(self, x, y, axis=..., bc_type=..., extrapolate=...) -> None:
        ...
    


