"""
This type stub file was generated by pyright.
"""

from . import dfitpack

"""
fitpack (dierckx in netlib) ---"""
__all__ = ['splrep', 'splprep', 'splev', 'splint', 'sproot', 'spalde', 'bisplrep', 'bisplev', 'insert', 'splder', 'splantider']
dfitpack_int = dfitpack.types.intvar.dtype
_iermess = ...
_iermess2 = ...
_parcur_cache = ...
def splprep(x, w=..., u=..., ub=..., ue=..., k=..., task=..., s=..., t=..., full_output=..., nest=..., per=..., quiet=...):
    """
    Find the B-spline represent"""
    ...

_curfit_cache = ...
def splrep(x, y, w=..., xb=..., xe=..., k=..., task=..., s=..., t=..., full_output=..., per=..., quiet=...):
    """
    Find the B-spline represent"""
    ...

def splev(x, tck, der=..., ext=...): # -> list[Unknown] | Any:
    """
    Evaluate a B-spline or its """
    ...

def splint(a, b, tck, full_output=...): # -> list[Unknown] | tuple[Any, Any] | Any:
    """
    Evaluate the definite integ"""
    ...

def sproot(tck, mest=...): # -> list[Unknown] | Any:
    """
    Find the roots of a cubic B"""
    ...

def spalde(x, tck): # -> list[Unknown] | Any:
    """
    Evaluate all derivatives of"""
    ...

_surfit_cache = ...
def bisplrep(x, y, z, w=..., xb=..., xe=..., yb=..., ye=..., kx=..., ky=..., task=..., s=..., eps=..., tx=..., ty=..., full_output=..., nxest=..., nyest=..., quiet=...):
    """
    Find a bivariate B-spline r"""
    ...

def bisplev(x, y, tck, dx=..., dy=...): # -> Any:
    """
    Evaluate a bivariate B-spli"""
    ...

def dblint(xa, xb, ya, yb, tck): # -> Any:
    """Evaluate the integral of a splin"""
    ...

def insert(x, tck, m=..., per=...): # -> tuple[Unbound | Unknown, list[Unknown], Unbound | Unknown] | tuple[Any, Any, Unknown]:
    """
    Insert knots into a B-splin"""
    ...

def splder(tck, n=...): # -> tuple[Unknown | Any, Unknown | Any, Unknown] | tuple[Unknown, Unknown | Any, Unknown]:
    """
    Compute the spline represen"""
    ...

def splantider(tck, n=...): # -> tuple[Unknown | Any, Unknown | Any, Unknown]:
    """
    Compute the spline for the """
    ...

