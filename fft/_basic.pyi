"""
This type stub file was generated by pyright.
"""

@_dispatch
def fft(x, n=..., axis=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the 1-D discrete Fo"""
    ...

@_dispatch
def ifft(x, n=..., axis=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the 1-D inverse dis"""
    ...

@_dispatch
def rfft(x, n=..., axis=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the 1-D discrete Fo"""
    ...

@_dispatch
def irfft(x, n=..., axis=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Computes the inverse of `rf"""
    ...

@_dispatch
def hfft(x, n=..., axis=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the FFT of a signal"""
    ...

@_dispatch
def ihfft(x, n=..., axis=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the inverse FFT of """
    ...

@_dispatch
def fftn(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the N-D discrete Fo"""
    ...

@_dispatch
def ifftn(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the N-D inverse dis"""
    ...

@_dispatch
def fft2(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the 2-D discrete Fo"""
    ...

@_dispatch
def ifft2(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the 2-D inverse dis"""
    ...

@_dispatch
def rfftn(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the N-D discrete Fo"""
    ...

@_dispatch
def rfft2(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the 2-D FFT of a re"""
    ...

@_dispatch
def irfftn(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Computes the inverse of `rf"""
    ...

@_dispatch
def irfft2(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Computes the inverse of `rf"""
    ...

@_dispatch
def hfftn(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the N-D FFT of Herm"""
    ...

@_dispatch
def hfft2(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the 2-D FFT of a He"""
    ...

@_dispatch
def ihfftn(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the N-D inverse dis"""
    ...

@_dispatch
def ihfft2(x, s=..., axes=..., norm=..., overwrite_x=..., workers=..., *, plan=...): # -> tuple[Dispatchable]:
    """
    Compute the 2-D inverse FFT"""
    ...

