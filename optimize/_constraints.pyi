"""
This type stub file was generated by pyright.
"""

"""Constraints definition for minim"""
class NonlinearConstraint:
    """Nonlinear constraint on the vari"""
    def __init__(self, fun, lb, ub, jac=..., hess=..., keep_feasible=..., finite_diff_rel_step=..., finite_diff_jac_sparsity=...) -> None:
        ...
    


class LinearConstraint:
    """Linear constraint on the variabl"""
    def __init__(self, A, lb, ub, keep_feasible=...) -> None:
        ...
    


class Bounds:
    """Bounds constraint on the variabl"""
    def __init__(self, lb, ub, keep_feasible=...) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class PreparedConstraint:
    """Constraint prepared from a user """
    def __init__(self, constraint, x0, sparse_jacobian=..., finite_diff_bounds=...) -> None:
        ...
    
    def violation(self, x): # -> Any:
        """How much the constraint is excee"""
        ...
    


def new_bounds_to_old(lb, ub, n): # -> list[tuple[float | None, float | None]]:
    """Convert the new bounds represent"""
    ...

def old_bound_to_new(bounds): # -> tuple[ndarray[Unknown, Unknown], ndarray[Unknown, Unknown]]:
    """Convert the old bounds represent"""
    ...

def strict_bounds(lb, ub, keep_feasible, n_vars): # -> tuple[NDArray[Any], NDArray[Any]]:
    """Remove bounds which are not aske"""
    ...

def new_constraint_to_old(con, x0):
    """
    Converts new-style constrai"""
    ...

def old_constraint_to_new(ic, con): # -> NonlinearConstraint:
    """
    Converts old-style constrai"""
    ...

