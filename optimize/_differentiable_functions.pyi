"""
This type stub file was generated by pyright.
"""

FD_METHODS = ...
class ScalarFunction:
    """Scalar function and its derivati"""
    def __init__(self, fun, x0, args, grad, hess, finite_diff_rel_step, finite_diff_bounds, epsilon=...) -> None:
        ...
    
    def fun(self, x):
        ...
    
    def grad(self, x):
        ...
    
    def hess(self, x): # -> csr_matrix | ndarray[Unknown, Unknown] | HessianUpdateStrategy:
        ...
    
    def fun_and_grad(self, x): # -> tuple[Unknown, Unknown]:
        ...
    


class VectorFunction:
    """Vector function and its derivati"""
    def __init__(self, fun, x0, jac, hess, finite_diff_rel_step, finite_diff_jac_sparsity, finite_diff_bounds, sparse_jacobian) -> None:
        ...
    
    def fun(self, x):
        ...
    
    def jac(self, x): # -> csr_matrix | ndarray[Unknown, Unknown]:
        ...
    
    def hess(self, x, v): # -> csr_matrix | ndarray[Unknown, Unknown] | HessianUpdateStrategy:
        ...
    


class LinearVectorFunction:
    """Linear vector function and its d"""
    def __init__(self, A, x0, sparse_jacobian) -> None:
        ...
    
    def fun(self, x): # -> ndarray[Unknown, Unknown] | Any:
        ...
    
    def jac(self, x): # -> csr_matrix | ndarray[Unknown, Unknown]:
        ...
    
    def hess(self, x, v): # -> csr_matrix:
        ...
    


class IdentityVectorFunction(LinearVectorFunction):
    """Identity vector function and its"""
    def __init__(self, x0, sparse_jacobian) -> None:
        ...
    


