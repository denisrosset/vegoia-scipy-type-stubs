"""
This type stub file was generated by pyright.
"""

"""Basic linear factorizations need"""
__all__ = ['orthogonality', 'projections']
def orthogonality(A, g): # -> Literal[0]:
    """Measure orthogonality between a """
    ...

def normal_equation_projections(A, m, n, orth_tol, max_refin, tol): # -> tuple[(x: Unknown) -> Unknown, (x: Unknown) -> Unknown, (x: Unknown) -> Unknown]:
    """Return linear operators for matr"""
    ...

def augmented_system_projections(A, m, n, orth_tol, max_refin, tol): # -> tuple[(x: Unknown) -> Unknown, (x: Unknown) -> Unknown, (x: Unknown) -> Unknown]:
    """Return linear operators for matr"""
    ...

def qr_factorization_projections(A, m, n, orth_tol, max_refin, tol): # -> tuple[(x: Unknown) -> Unknown, (x: Unknown) -> Unknown, (x: Unknown) -> Unknown] | tuple[(x: Unknown) -> Unknown, (x: Unknown) -> ndarray[Unknown, Unknown], (x: Unknown) -> Unknown]:
    """Return linear operators for matr"""
    ...

def svd_factorization_projections(A, m, n, orth_tol, max_refin, tol): # -> tuple[(x: Unknown) -> Unknown, (x: Unknown) -> Unknown, (x: Unknown) -> Unknown]:
    """Return linear operators for matr"""
    ...

def projections(A, method=..., orth_tol=..., max_refin=..., tol=...):
    """Return three linear operators re"""
    ...

