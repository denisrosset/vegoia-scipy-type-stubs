"""
This type stub file was generated by pyright.
"""

class CanonicalConstraint:
    """Canonical constraint to use with"""
    def __init__(self, n_eq, n_ineq, fun, jac, hess, keep_feasible) -> None:
        ...
    
    @classmethod
    def from_PreparedConstraint(cls, constraint): # -> Self@CanonicalConstraint:
        """Create an instance from `Prepare"""
        ...
    
    @classmethod
    def empty(cls, n): # -> Self@CanonicalConstraint:
        """Create an "empty" instance.

   """
        ...
    
    @classmethod
    def concatenate(cls, canonical_constraints, sparse_jacobian): # -> Self@CanonicalConstraint:
        """Concatenate multiple `CanonicalC"""
        ...
    


def initial_constraints_as_canonical(n, prepared_constraints, sparse_jacobian):
    """Convert initial values of the co"""
    ...

