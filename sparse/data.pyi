"""
This type stub file was generated by pyright.
"""

from .base import spmatrix

"""Base class for sparse matrice wi"""
__all__ = []
class _data_matrix(spmatrix):
    def __init__(self) -> None:
        ...
    
    dtype = ...
    def __abs__(self):
        ...
    
    def __round__(self, ndigits=...):
        ...
    
    def __neg__(self):
        ...
    
    def __imul__(self, other): # -> Self@_data_matrix | _NotImplementedType:
        ...
    
    def __itruediv__(self, other): # -> Self@_data_matrix | _NotImplementedType:
        ...
    
    def astype(self, dtype, casting=..., copy=...): # -> Self@_data_matrix:
        ...
    
    def conj(self, copy=...): # -> Self@_data_matrix:
        ...
    
    def copy(self):
        ...
    
    def count_nonzero(self): # -> int:
        ...
    
    def power(self, n, dtype=...):
        """
        This function performs """
        ...
    


class _minmax_mixin:
    """Mixin for min and max methods.

"""
    def max(self, axis=..., out=...): # -> Any | coo_matrix:
        """
        Return the maximum of t"""
        ...
    
    def min(self, axis=..., out=...): # -> Any | coo_matrix:
        """
        Return the minimum of t"""
        ...
    
    def argmax(self, axis=..., out=...): # -> intp | int | matrix[Unknown, Unknown]:
        """Return indices of maximum elemen"""
        ...
    
    def argmin(self, axis=..., out=...): # -> intp | int | matrix[Unknown, Unknown]:
        """Return indices of minimum elemen"""
        ...
    


