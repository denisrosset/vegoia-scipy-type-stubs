"""
This type stub file was generated by pyright.
"""

from .base import spmatrix
from ._index import IndexMixin

"""Dictionary Of Keys based matrix"""
__docformat__ = ...
__all__ = ['dok_matrix', 'isspmatrix_dok']
class dok_matrix(spmatrix, IndexMixin, dict):
    """
    Dictionary Of Keys based sp"""
    format = ...
    def __init__(self, arg1, shape=..., dtype=..., copy=...) -> None:
        ...
    
    def update(self, val):
        ...
    
    def set_shape(self, shape): # -> None:
        ...
    
    shape = ...
    def getnnz(self, axis=...): # -> int:
        ...
    
    def count_nonzero(self): # -> Literal[0]:
        ...
    
    def __len__(self): # -> int:
        ...
    
    def get(self, key, default=...): # -> float:
        """This overrides the dict.get meth"""
        ...
    
    def __add__(self, other): # -> _NotImplementedType | dok_matrix:
        ...
    
    def __radd__(self, other): # -> _NotImplementedType | dok_matrix:
        ...
    
    def __neg__(self): # -> dok_matrix:
        ...
    
    def __imul__(self, other): # -> Self@dok_matrix | _NotImplementedType:
        ...
    
    def __truediv__(self, other): # -> dok_matrix:
        ...
    
    def __itruediv__(self, other): # -> Self@dok_matrix | _NotImplementedType:
        ...
    
    def __reduce__(self): # -> str | tuple[Any, ...]:
        ...
    
    def transpose(self, axes=..., copy=...): # -> dok_matrix:
        ...
    
    def conjtransp(self): # -> dok_matrix:
        """Return the conjugate transpose."""
        ...
    
    def copy(self): # -> dok_matrix:
        ...
    
    def tocoo(self, copy=...): # -> coo_matrix:
        ...
    
    def todok(self, copy=...): # -> dok_matrix | Self@dok_matrix:
        ...
    
    def tocsc(self, copy=...): # -> csc_matrix:
        ...
    
    def resize(self, *shape): # -> None:
        ...
    


def isspmatrix_dok(x): # -> bool:
    """Is x of dok_matrix type?

    Pa"""
    ...

