"""
This type stub file was generated by pyright.
"""

import numpy as np
from .data import _minmax_mixin
from .compressed import _cs_matrix

"""Compressed Block Sparse Row matr"""
__docformat__ = ...
__all__ = ['bsr_matrix', 'isspmatrix_bsr']
class bsr_matrix(_cs_matrix, _minmax_mixin):
    """Block Sparse Row matrix

    Thi"""
    format = ...
    def __init__(self, arg1, shape=..., dtype=..., copy=..., blocksize=...) -> None:
        ...
    
    def check_format(self, full_check=...): # -> None:
        """check whether the matrix format """
        ...
    
    blocksize = ...
    def getnnz(self, axis=...): # -> int:
        ...
    
    def __repr__(self): # -> Any:
        ...
    
    def diagonal(self, k=...): # -> ndarray[Unknown, Unknown]:
        ...
    
    def __getitem__(self, key):
        ...
    
    def __setitem__(self, key, val):
        ...
    
    @np.deprecate(message="BSR matvec is deprecated in SciP" "Use * operator instead.")
    def matvec(self, other):
        """Multiply matrix by vector."""
        ...
    
    @np.deprecate(message="BSR matmat is deprecated in SciP" "Use * operator instead.")
    def matmat(self, other):
        """Multiply this sparse matrix by o"""
        ...
    
    def tobsr(self, blocksize=..., copy=...): # -> bsr_matrix | Self@bsr_matrix:
        """Convert this matrix into Block S"""
        ...
    
    def tocsr(self, copy=...): # -> csr_matrix:
        ...
    
    def tocsc(self, copy=...): # -> csc_matrix:
        ...
    
    def tocoo(self, copy=...): # -> coo_matrix:
        """Convert this matrix to COOrdinat"""
        ...
    
    def toarray(self, order=..., out=...): # -> ndarray[Unknown, Unknown]:
        ...
    
    def transpose(self, axes=..., copy=...): # -> bsr_matrix:
        ...
    
    def eliminate_zeros(self): # -> None:
        """Remove zero elements in-place."""
        ...
    
    def sum_duplicates(self): # -> None:
        """Eliminate duplicate matrix entri"""
        ...
    
    def sort_indices(self): # -> None:
        """Sort the indices of this matrix """
        ...
    
    def prune(self): # -> None:
        """ Remove empty space after all no"""
        ...
    


def isspmatrix_bsr(x): # -> bool:
    """Is x of a bsr_matrix type?

    """
    ...

