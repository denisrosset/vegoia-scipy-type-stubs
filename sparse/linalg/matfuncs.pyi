"""
This type stub file was generated by pyright.
"""

from scipy.sparse.linalg.interface import LinearOperator

"""
Sparse matrix functions
"""
__all__ = ['expm', 'inv']
UPPER_TRIANGULAR = ...
def inv(A):
    """
    Compute the inverse of a sp"""
    ...

class MatrixPowerOperator(LinearOperator):
    def __init__(self, A, p, structure=...) -> None:
        ...
    
    @property
    def T(self): # -> MatrixPowerOperator:
        ...
    


class ProductOperator(LinearOperator):
    """
    For now, this is limited to"""
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @property
    def T(self): # -> ProductOperator:
        ...
    


class _ExpmPadeHelper:
    """
    Help lazily evaluate a matr"""
    def __init__(self, A, structure=..., use_exact_onenorm=...) -> None:
        """
        Initialize the object.
"""
        ...
    
    @property
    def A2(self):
        ...
    
    @property
    def A4(self):
        ...
    
    @property
    def A6(self):
        ...
    
    @property
    def A8(self):
        ...
    
    @property
    def A10(self):
        ...
    
    @property
    def d4_tight(self):
        ...
    
    @property
    def d6_tight(self):
        ...
    
    @property
    def d8_tight(self):
        ...
    
    @property
    def d10_tight(self):
        ...
    
    @property
    def d4_loose(self):
        ...
    
    @property
    def d6_loose(self):
        ...
    
    @property
    def d8_loose(self):
        ...
    
    @property
    def d10_loose(self):
        ...
    
    def pade3(self): # -> tuple[Unknown, Unknown]:
        ...
    
    def pade5(self): # -> tuple[Unknown, Unknown]:
        ...
    
    def pade7(self): # -> tuple[Unknown, Unknown]:
        ...
    
    def pade9(self): # -> tuple[Unknown, Unknown]:
        ...
    
    def pade13_scaled(self, s): # -> tuple[Unknown, Unknown]:
        ...
    


def expm(A):
    """
    Compute the matrix exponent"""
    ...

