"""
This type stub file was generated by pyright.
"""

"""
Implementation of Harwell-Boein"""
__all__ = ["MalformedHeader", "hb_read", "hb_write", "HBInfo", "HBFile", "HBMatrixType"]
class MalformedHeader(Exception):
    ...


class LineOverflow(Warning):
    ...


class HBInfo:
    @classmethod
    def from_data(cls, m, title=..., key=..., mxtype=..., fmt=...): # -> Self@HBInfo:
        """Create a HBInfo instance from an"""
        ...
    
    @classmethod
    def from_file(cls, fid): # -> Self@HBInfo:
        """Create a HBInfo instance from a """
        ...
    
    def __init__(self, title, key, total_nlines, pointer_nlines, indices_nlines, values_nlines, mxtype, nrows, ncols, nnon_zeros, pointer_format_str, indices_format_str, values_format_str, right_hand_sides_nlines=..., nelementals=...) -> None:
        """Do not use this directly, but th"""
        ...
    
    def dump(self): # -> str:
        """Gives the header corresponding t"""
        ...
    


class HBMatrixType:
    """Class to hold the matrix type."""
    _q2f_type = ...
    _q2f_structure = ...
    _q2f_storage = ...
    _f2q_type = ...
    _f2q_structure = ...
    _f2q_storage = ...
    @classmethod
    def from_fortran(cls, fmt): # -> Self@HBMatrixType:
        ...
    
    def __init__(self, value_type, structure, storage=...) -> None:
        ...
    
    @property
    def fortran_format(self): # -> str:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class HBFile:
    def __init__(self, file, hb_info=...) -> None:
        """Create a HBFile instance.

     """
        ...
    
    @property
    def title(self): # -> Unknown:
        ...
    
    @property
    def key(self): # -> Unknown:
        ...
    
    @property
    def type(self):
        ...
    
    @property
    def structure(self):
        ...
    
    @property
    def storage(self):
        ...
    
    def read_matrix(self): # -> csc_matrix:
        ...
    
    def write_matrix(self, m): # -> None:
        ...
    


def hb_read(path_or_open_file): # -> csc_matrix:
    """Read HB-format file.

    Parame"""
    ...

def hb_write(path_or_open_file, m, hb_info=...): # -> None:
    """Write HB-format file.

    Param"""
    ...

