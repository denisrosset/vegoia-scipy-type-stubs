"""
This type stub file was generated by pyright.
"""

"""
NetCDF reader/writer module.

T"""
__all__ = ['netcdf_file', 'netcdf_variable']
IS_PYPY = ...
ABSENT = ...
ZERO = ...
NC_BYTE = ...
NC_CHAR = ...
NC_SHORT = ...
NC_INT = ...
NC_FLOAT = ...
NC_DOUBLE = ...
NC_DIMENSION = ...
NC_VARIABLE = ...
NC_ATTRIBUTE = ...
FILL_BYTE = ...
FILL_CHAR = ...
FILL_SHORT = ...
FILL_INT = ...
FILL_FLOAT = ...
FILL_DOUBLE = ...
TYPEMAP = ...
FILLMAP = ...
REVERSE = ...
class netcdf_file:
    """
    A file object for NetCDF da"""
    def __init__(self, filename, mode=..., mmap=..., version=..., maskandscale=...) -> None:
        """Initialize netcdf_file from file"""
        ...
    
    def __setattr__(self, attr, value): # -> None:
        ...
    
    def close(self): # -> None:
        """Closes the NetCDF file."""
        ...
    
    __del__ = ...
    def __enter__(self): # -> Self@netcdf_file:
        ...
    
    def __exit__(self, type, value, traceback): # -> None:
        ...
    
    def createDimension(self, name, length): # -> None:
        """
        Adds a dimension to the"""
        ...
    
    def createVariable(self, name, type, dimensions):
        """
        Create an empty variabl"""
        ...
    
    def flush(self): # -> None:
        """
        Perform a sync-to-disk """
        ...
    
    sync = ...
    _pack_int32 = ...
    _unpack_int32 = ...


class netcdf_variable:
    """
    A data object for netcdf fi"""
    def __init__(self, data, typecode, size, shape, dimensions, attributes=..., maskandscale=...) -> None:
        ...
    
    def __setattr__(self, attr, value): # -> None:
        ...
    
    def isrec(self): # -> bool:
        """Returns whether the variable has"""
        ...
    
    isrec = ...
    def shape(self):
        """Returns the shape tuple of the d"""
        ...
    
    shape = ...
    def getValue(self):
        """
        Retrieve a scalar value"""
        ...
    
    def assignValue(self, value): # -> None:
        """
        Assign a scalar value t"""
        ...
    
    def typecode(self): # -> Unknown:
        """
        Return the typecode of """
        ...
    
    def itemsize(self): # -> Unknown:
        """
        Return the itemsize of """
        ...
    
    def __getitem__(self, index):
        ...
    
    def __setitem__(self, index, data):
        ...
    


NetCDFFile = netcdf_file
NetCDFVariable = netcdf_variable
