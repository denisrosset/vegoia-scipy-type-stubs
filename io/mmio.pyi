"""
This type stub file was generated by pyright.
"""

"""
  Matrix Market I/O in Python.
"""
__all__ = ['mminfo', 'mmread', 'mmwrite', 'MMFile']
def asstr(s): # -> str:
    ...

def mminfo(source): # -> tuple[int, int, int, str, str, str]:
    """
    Return size and storage par"""
    ...

def mmread(source):
    """
    Reads the contents of a Mat"""
    ...

def mmwrite(target, a, comment=..., field=..., precision=..., symmetry=...): # -> None:
    """
    Writes the sparse or dense """
    ...

class MMFile:
    __slots__ = ...
    @property
    def rows(self):
        ...
    
    @property
    def cols(self):
        ...
    
    @property
    def entries(self):
        ...
    
    @property
    def format(self):
        ...
    
    @property
    def field(self):
        ...
    
    @property
    def symmetry(self):
        ...
    
    @property
    def has_symmetry(self): # -> bool:
        ...
    
    FORMAT_COORDINATE = ...
    FORMAT_ARRAY = ...
    FORMAT_VALUES = ...
    FIELD_INTEGER = ...
    FIELD_UNSIGNED = ...
    FIELD_REAL = ...
    FIELD_COMPLEX = ...
    FIELD_PATTERN = ...
    FIELD_VALUES = ...
    SYMMETRY_GENERAL = ...
    SYMMETRY_SYMMETRIC = ...
    SYMMETRY_SKEW_SYMMETRIC = ...
    SYMMETRY_HERMITIAN = ...
    SYMMETRY_VALUES = ...
    DTYPES_BY_FIELD = ...
    @staticmethod
    def reader(): # -> None:
        ...
    
    @staticmethod
    def writer(): # -> None:
        ...
    
    @classmethod
    def info(self, source): # -> tuple[int, int, int, str, str, str]:
        """
        Return size, storage pa"""
        ...
    
    def __init__(self, **kwargs) -> None:
        ...
    
    def read(self, source):
        """
        Reads the contents of a"""
        ...
    
    def write(self, target, a, comment=..., field=..., precision=..., symmetry=...): # -> None:
        """
        Writes sparse or dense """
        ...
    


if __name__ == '__main__':
    ...
