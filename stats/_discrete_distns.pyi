"""
This type stub file was generated by pyright.
"""

from ._distn_infrastructure import rv_discrete

class binom_gen(rv_discrete):
    r"""A binomial discrete random varia"""
    ...


binom = ...
class bernoulli_gen(binom_gen):
    r"""A Bernoulli discrete random vari"""
    ...


bernoulli = ...
class betabinom_gen(rv_discrete):
    r"""A beta-binomial discrete random """
    ...


betabinom = ...
class nbinom_gen(rv_discrete):
    r"""A negative binomial discrete ran"""
    ...


nbinom = ...
class geom_gen(rv_discrete):
    r"""A geometric discrete random vari"""
    ...


geom = ...
class hypergeom_gen(rv_discrete):
    r"""A hypergeometric discrete random"""
    ...


hypergeom = ...
class nhypergeom_gen(rv_discrete):
    r"""A negative hypergeometric discre"""
    ...


nhypergeom = ...
class logser_gen(rv_discrete):
    r"""A Logarithmic (Log-Series, Serie"""
    ...


logser = ...
class poisson_gen(rv_discrete):
    r"""A Poisson discrete random variab"""
    ...


poisson = ...
class planck_gen(rv_discrete):
    r"""A Planck discrete exponential ra"""
    ...


planck = ...
class boltzmann_gen(rv_discrete):
    r"""A Boltzmann (Truncated Discrete """
    ...


boltzmann = ...
class randint_gen(rv_discrete):
    r"""A uniform discrete random variab"""
    ...


randint = ...
class zipf_gen(rv_discrete):
    r"""A Zipf (Zeta) discrete random va"""
    ...


zipf = ...
class zipfian_gen(rv_discrete):
    r"""A Zipfian discrete random variab"""
    ...


zipfian = ...
class dlaplace_gen(rv_discrete):
    r"""A  Laplacian discrete random var"""
    ...


dlaplace = ...
class skellam_gen(rv_discrete):
    r"""A  Skellam discrete random varia"""
    ...


skellam = ...
class yulesimon_gen(rv_discrete):
    r"""A Yule-Simon discrete random var"""
    ...


yulesimon = ...
class _nchypergeom_gen(rv_discrete):
    r"""A noncentral hypergeometric disc"""
    rvs_name = ...
    dist = ...


class nchypergeom_fisher_gen(_nchypergeom_gen):
    r"""A Fisher's noncentral hypergeome"""
    rvs_name = ...
    dist = ...


nchypergeom_fisher = ...
class nchypergeom_wallenius_gen(_nchypergeom_gen):
    r"""A Wallenius' noncentral hypergeo"""
    rvs_name = ...
    dist = ...


nchypergeom_wallenius = ...
pairs = ...
__all__ = _distn_names + _distn_gen_names
