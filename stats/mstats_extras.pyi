"""
This type stub file was generated by pyright.
"""

"""
Additional statistics functions"""
__all__ = ['compare_medians_ms', 'hdquantiles', 'hdmedian', 'hdquantiles_sd', 'idealfourths', 'median_cihs', 'mjci', 'mquantiles_cimj', 'rsh', 'trimmed_mean_ci']
def hdquantiles(data, prob=..., axis=..., var=...):
    """
    Computes quantile estimates"""
    ...

def hdmedian(data, axis=..., var=...):
    """
    Returns the Harrell-Davis e"""
    ...

def hdquantiles_sd(data, prob=..., axis=...):
    """
    The standard error of the H"""
    ...

def trimmed_mean_ci(data, limits=..., inclusive=..., alpha=..., axis=...): # -> ndarray[Unknown, Unknown]:
    """
    Selected confidence interva"""
    ...

def mjci(data, prob=..., axis=...): # -> ndarray[Unknown, Unknown]:
    """
    Returns the Maritz-Jarrett """
    ...

def mquantiles_cimj(data, prob=..., alpha=..., axis=...): # -> tuple[Unknown | Any, Unknown | Any]:
    """
    Computes the alpha confiden"""
    ...

def median_cihs(data, alpha=..., axis=...): # -> tuple[Unknown, Unknown]:
    """
    Computes the alpha-level co"""
    ...

def compare_medians_ms(group_1, group_2, axis=...): # -> Any | NDArray[signedinteger[Any]]:
    """
    Compares the medians from t"""
    ...

def idealfourths(data, axis=...): # -> list[float] | list[Unknown]:
    """
    Returns an estimate of the """
    ...

def rsh(data, points=...):
    """
    Evaluates Rosenblatt's shif"""
    ...

